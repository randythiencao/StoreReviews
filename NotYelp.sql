--
---- CREATE USER AND GRANT ACCESS
--drop user john_revature cascade;
--
--create user john_revature
--identified by pass
--default tablespace users
--temporary tablespace temp
--quota 10m on users;
--grant connect to john_revature;
--grant resource to john_revature;
--grant create session to john_revature;
--grant create table to john_revature;
--grant create view to john_revature;

-- conn reimbdb/123456789;
--conn ers/pass;

-- DROPS
-- DROP SEQUENCE reimb_seq;


DROP TABLE USER_ROLES;
DROP TABLE USERS;
DROP TABLE REVIEWS;
DROP TABLE RESTAURANTS;
DROP TABLE RESTAURANTS_REVIEWS;
DROP TABLE USERS_REVIEWS;
DROP TABLE RESTAURANT_PHOTOS;
DROP SEQUENCE USER_SEQ;
DROP SEQUENCE REVIEW_SEQ;
DROP SEQUENCE REST_SEQ;
-- CREATE DATABASE TABLES
-- USER TABLE
--create table users
--(
--    USER_ID NUMBER PRIMARY KEY, 
--    USERNAME VARCHAR2(50) NOT NULL UNIQUE, 
--	PASSWORD VARCHAR2(50) NOT NULL, 
--    SALT RAW(16),
--	FIRSTNAME VARCHAR2(100) NOT NULL, 
--	LASTNAME VARCHAR2(100) NOT NULL UNIQUE, 
--	EMAIL VARCHAR2(150) NOT NULL, 
--	ROLE_ID NUMBER NOT NULL
--    );
create table users
(
    USER_ID NUMBER PRIMARY KEY, 
    USERNAME VARCHAR2(50), 
	PASSWORD VARCHAR2(50), 
    SALT RAW(16),
	FIRSTNAME VARCHAR2(100), 
	LASTNAME VARCHAR2(100), 
	EMAIL VARCHAR2(150), 
	ROLE_ID NUMBER
    );
create table USER_ROLES
(
    USER_ROLE_ID NUMBER PRIMARY KEY, 
    ROLE VARCHAR2(10) NOT NULL 
);
-- REVIEWS TABLE
create table REVIEWS
(
    REVIEW_ID NUMBER PRIMARY KEY, 
    RATING NUMBER,
    PICTURE BLOB,
    COM VARCHAR2(250)
);
-- JOIN TABLE BETWEEN USERS AND REVIEWS
create table users_REVIEWS
(
    users_user_id NUMBER, 
    REVIEWS_REVIEW_id NUMBER,
    CONSTRAINT PK_USERS_REVIEWS PRIMARY KEY (users_user_id, REVIEWS_REVIEW_id)
);
-- JOIN TABLE BETWEEN RESTAURANTS AND REVIEWS
create table RESTAURANTS_REVIEWS
(
    RESTAURANTS_REST_ID NUMBER, 
    REVIEWS_REVIEW_ID NUMBER,
    CONSTRAINT PK_RESTAURANT_REVIEWS PRIMARY KEY (RESTAURANTS_REST_ID, REVIEWS_REVIEW_ID)
);
-- RESTAURANT TABLE
--create table restaurants
--(
--    REST_ID NUMBER PRIMARY KEY, 
--    STREET_ADDRESS VARCHAR2(250) NOT NULL, 
--	CITY VARCHAR2(20) NOT NULL, 
--	ZIP_CODE VARCHAR2(10) NOT NULL, 
--	HOME_PICTURE BLOB,  
--	REST_OWNER_ID NUMBER NOT NULL,
--    REST_CULTURE VARCHAR2(20)
--);
create table restaurants
(
    REST_ID NUMBER PRIMARY KEY, 
    STREET_ADDRESS VARCHAR2(250), 
	CITY VARCHAR2(20), 
	ZIP_CODE VARCHAR2(10), 
	HOME_PICTURE BLOB,  
	REST_OWNER_ID NUMBER,
    REST_CULTURE VARCHAR2(20)
);
-- TABLE OF RESTAURANT PHOTOS
create table restaurant_photos
(
    REST_PHOTO_ID NUMBER PRIMARY KEY, 
    PHOTO BLOB
);


CREATE SEQUENCE USER_SEQ start with 1;
CREATE SEQUENCE REVIEW_SEQ start with 1;
CREATE SEQUENCE REST_SEQ start with 1;


-- CREATE FOREIGN KEY RELATIONSHIPS FOR TABLES
    
--ALTER TABLE USERS
--    ADD CONSTRAINT USER_ROLES_FK FOREIGN KEY (ROLE_ID) 
--    REFERENCES USER_ROLES(USER_ROLE_ID);


---- INSERT DATA INTO EACH TABLE
--INSERT INTO USERS VALUES (1, 'USER1', 'PASS1', NULL, 'FN1', 'LN1', 'EMAIL1', 1);
--INSERT INTO USERS VALUES (2, 'USER2', 'PASS2', NULL, 'FN2', 'LN2', 'EMAIL2', 2);
--INSERT INTO REVIEWS VALUES (1, 5);
--INSERT INTO REVIEWS VALUES (2, 4);
--INSERT INTO USER_REVIEWS VALUES (1,1);
--INSERT INTO USER_REVIEWS VALUES (2,2);
--INSERT INTO RESTAURANTS VALUES (1, '100 ST', 'CITY1', 'ZIP1', NULL, 1, 'CULTURE1');
--INSERT INTO RESTAURANTS VALUES (2, '101 ST', 'CITY1', 'ZIP1', NULL, 1, 'CULTURE1');
--INSERT INTO RESTAURANT_REVIEWS VALUES (1,1);
--INSERT INTO RESTAURANT_REVIEWS VALUES (2,2);
--INSERT INTO USER_ROLES VALUES (1, 'ROLE1');
--INSERT INTO USER_ROLES VALUES (2, 'ROLE2');
--COMMIT;



select * from users;